<%= form_for(@airline,:html => {:class => "form-horizontal",:id=> "new_airline"}) do |ff| %>
  <% if @airline.errors.any? %> 
    <div id="error_explanation">
      <h2><%= pluralize(@airline.errors.count, "error") %> prohibited this airline from being saved:</h2>

      <ul>
      <% @airline.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
<% if params[:action] == "new" %>
<%= ff.fields_for :users do |f| %>
  <div class="form-group">
      <label class="control-label col-sm-2" for="email">Email:</label>
      <div class="col-sm-10">
        <%= f.text_field :email, :pattern=> "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$",class: "form-control",:required=> true %>
    </div>
    </div>
  <div class="form-group">
      <label class="control-label col-sm-2" for="pwd">Password:</label>
      <div class="col-sm-10"> 
    <% if @minimum_password_length %>
      <em>(<%= @minimum_password_length %> characters minimum)</em><br />
    <% end %>
    <%= f.password_field :password, autofocus: true, autocomplete: "off", class: "form-control" %>
  </div>
</div>
   <div class="form-group">
      <label class="control-label col-sm-2" for="pwd">Password Confirmation:</label>
      <div class="col-sm-10">
    <%= f.password_field :password_confirmation, autocomplete: "off", class: "form-control" %>
  </div>
  </div>
  <%end%>
   <%end%>
   <div class="form-group">
      <label class="control-label col-sm-2" for="pwd">AirLine Name:</label>
      <div class="col-sm-10">
        <%= ff.text_field :airline_name, class: "form-control" %>
    </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="pwd">AirLine Address:</label>
      <div class="col-sm-10">
        <%= ff.text_field :airline_address, class: "form-control" %>
    </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="email">Country:</label>
      <div class="col-sm-10">
      <%= country_select("airline", "country", { include_blank: 'Select a country' }) %>
      </div>
    </div>
     <div class="form-group">
      <label class="control-label col-sm-2" for="email">Contact Person Name:</label>
      <div class="col-sm-10">
        <%= ff.text_field :contact_person_name , class: "form-control"%>
    </div>
    </div>
  <div class="form-group">
      <label class="control-label col-sm-2" for="email">Contact Person Address:</label>
      <div class="col-sm-10">
        <%= ff.text_field :contact_person_address , class: "form-control" %>
    </div>
    </div>
     <div class="form-group">
      <label class="control-label col-sm-2" for="email">Contact Person Email:</label>
      <div class="col-sm-10">
        <%= ff.text_field :contact_person_email,:pattern=> "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$", class: "form-control" %>
    </div>
    </div>
     <div class="form-group">
      <label class="control-label col-sm-2" for="email">Contact Number:</label>
      <div class="col-sm-10">
        <%= ff.text_field :contact_number,class: "form-control" %>
    </div>
    </div>
     <div class="form-group">
      <label class="control-label col-sm-2" for="email">Year in service</label>
      <div class="col-sm-10">
        <%= ff.text_field :year_in_service, class: "form-control" %>
    </div>
    </div>
     <div class="form-group">
      <label class="control-label col-sm-2" for="email">IATA Code:</label>
      <div class="col-sm-10">
        <%= ff.text_field :iata_code, class: "form-control" %>
    </div>
    </div>
     <div class="form-group">
      <label class="control-label col-sm-2" for="email">CAA Licence:</label>
      <div class="col-sm-10">
        <%= ff.text_field :caa_license, class: "form-control" %>
    </div>
    </div>
<div class="form-group">        
      <div class="col-sm-offset-2 col-sm-10">
        <%= ff.submit 'Sign in', class: "btn btn-default" %>
    </div>
    </div>
<% end %>
<script type="text/javascript">

 jQuery.validator.addMethod("lettersonly", function(value, element) {
    return this.optional(element) || /^[a-zA-Z\s]+$/i.test(value);
  }, "Letters only please"); 

  $.validator.addMethod("lettersNumbersOnly", function(value, element) {
    return this.optional(element) || /^[a-z0-9\-\s]+$/i.test(value);
  }, "Username must contain only letters, numbers, or dashes.");

  $("#new_airline").validate({
     rules: {
      "airline[airline_name]": { lettersonly: true},
      "airline[airline_address]" : {lettersNumbersOnly: true},
      "airline[users][email]" : {email: true},
      "airline[contact_person_email]":{email: true},
      "airline[contact_person_address]" : {lettersNumbersOnly :true},
      "airline[contact_number]" : {digits :true},
      "airline[year_in_service]" : {digits :true}
    }
    });

</script>

